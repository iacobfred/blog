/* Do not edit this file. It was generated programmatically. */

import {
  CalendarEventCreationArgs,
  CalendarEventUpdateArgs,
} from "@/graphql/generated/args/calendarEvent.args";
import { CalendarEventFragment } from "@/graphql/generated/fragments/calendarEvent.fragment";
import {
  CREATE_CALENDAR_EVENT,
  updateCacheAfterCreatingCalendarEvent,
  UPDATE_CALENDAR_EVENT,
} from "@/graphql/generated/mutations/calendarEvent.mutations";
import {
  CalendarEventData,
  calendarEventDataReducer,
  initializeCalendarEventData,
} from "@/graphql/generated/reducers/calendarEvent.reducer";
import { Payload, useHandleMutation } from "@/utils/data";
import { MutationHookOptions } from "@apollo/client";
import { Dispatch, useEffect, useReducer } from "react";

type CalendarEventCreationMutationHookOptions = MutationHookOptions<
  { createCalendarEvent: CalendarEventFragment },
  CalendarEventCreationArgs
>;

export const useCreateCalendarEvent = (options?: CalendarEventCreationMutationHookOptions) => {
  return useHandleMutation<
    { createCalendarEvent: CalendarEventFragment },
    CalendarEventCreationArgs
  >(CREATE_CALENDAR_EVENT, {
    ...updateCacheAfterCreatingCalendarEvent,
    ...(options ?? {}),
  });
};

type CalendarEventUpdateMutationHookOptions = MutationHookOptions<
  { updateCalendarEvent: CalendarEventFragment },
  CalendarEventUpdateArgs
>;

export const useUpdateCalendarEvent = (options?: CalendarEventUpdateMutationHookOptions) => {
  return useHandleMutation<{ updateCalendarEvent: CalendarEventFragment }, CalendarEventUpdateArgs>(
    UPDATE_CALENDAR_EVENT,
    options
  );
};

export const useCalendarEventDataReducer = (
  data: CalendarEventData
): [CalendarEventData, Dispatch<Payload<CalendarEventData>>] => {
  const [calendarEventData, dispatchCalendarEventData] = useReducer(
    calendarEventDataReducer,
    initializeCalendarEventData(data),
    initializeCalendarEventData
  );
  useEffect(() => {
    console.log("useCalendarEventReducer:", data);
  }, [data]);
  return [calendarEventData, dispatchCalendarEventData];
};
