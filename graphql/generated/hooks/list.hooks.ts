/* Do not edit this file. It was generated programmatically. */

import { useUser } from "@/components/contexts/UserContext";
import { ListCreationArgs, ListUpdateArgs } from "@/graphql/generated/args/list.args";
import { ListFragment } from "@/graphql/generated/fragments/list.fragment";
import {
  CREATE_LIST,
  updateCacheAfterCreatingList,
  UPDATE_LIST,
} from "@/graphql/generated/mutations/list.mutations";
import {
  initializeListData,
  ListData,
  listDataReducer,
} from "@/graphql/generated/reducers/list.reducer";
import { Payload, useHandleMutation } from "@/utils/data";
import { MutationHookOptions } from "@apollo/client";
import { Dispatch, useEffect, useReducer } from "react";

type ListCreationMutationHookOptions = MutationHookOptions<
  { createList: ListFragment },
  ListCreationArgs
>;

export const useCreateList = (options?: ListCreationMutationHookOptions) => {
  return useHandleMutation<{ createList: ListFragment }, ListCreationArgs>(CREATE_LIST, {
    ...updateCacheAfterCreatingList,
    ...(options ?? {}),
  });
};

type ListUpdateMutationHookOptions = MutationHookOptions<
  { updateList: ListFragment },
  ListUpdateArgs
>;

export const useUpdateList = (options?: ListUpdateMutationHookOptions) => {
  return useHandleMutation<{ updateList: ListFragment }, ListUpdateArgs>(UPDATE_LIST, options);
};

export const useListDataReducer = (data?: ListData): [ListData, Dispatch<Payload<ListData>>] => {
  const user = useUser();
  const initializedData = initializeListData(data ?? { userId: user?.id as string });
  const [listData, dispatchListData] = useReducer(
    listDataReducer,
    initializedData,
    initializeListData
  );
  useEffect(() => {
    if (user?.id && !listData?.userId) {
      console.log("Dispatching list data!");
      dispatchListData({ field: "userId", value: user.id });
    }
  }, [user, listData]);
  return [listData, dispatchListData];
};
