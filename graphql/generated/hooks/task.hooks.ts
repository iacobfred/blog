/* Do not edit this file. It was generated programmatically. */

import { TaskCreationArgs, TaskUpdateArgs } from "@/graphql/generated/args/task.args";
import { TaskFragment } from "@/graphql/generated/fragments/task.fragment";
import {
  CREATE_TASK,
  updateCacheAfterCreatingTask,
  UPDATE_TASK,
} from "@/graphql/generated/mutations/task.mutations";
import {
  initializeTaskData,
  TaskData,
  taskDataReducer,
} from "@/graphql/generated/reducers/task.reducer";
import { Payload, useHandleMutation } from "@/utils/data";
import { MutationHookOptions } from "@apollo/client";
import { Dispatch, useEffect, useReducer } from "react";

type TaskCreationMutationHookOptions = MutationHookOptions<
  { createTask: TaskFragment },
  TaskCreationArgs
>;

export const useCreateTask = (options?: TaskCreationMutationHookOptions) => {
  return useHandleMutation<{ createTask: TaskFragment }, TaskCreationArgs>(CREATE_TASK, {
    ...updateCacheAfterCreatingTask,
    ...(options ?? {}),
  });
};

type TaskUpdateMutationHookOptions = MutationHookOptions<
  { updateTask: TaskFragment },
  TaskUpdateArgs
>;

export const useUpdateTask = (options?: TaskUpdateMutationHookOptions) => {
  return useHandleMutation<{ updateTask: TaskFragment }, TaskUpdateArgs>(UPDATE_TASK, options);
};

export const useTaskDataReducer = (data: TaskData): [TaskData, Dispatch<Payload<TaskData>>] => {
  const [taskData, dispatchTaskData] = useReducer(
    taskDataReducer,
    initializeTaskData(data),
    initializeTaskData
  );
  useEffect(() => {
    console.log("useTaskReducer:", data);
  }, [data]);
  return [taskData, dispatchTaskData];
};
