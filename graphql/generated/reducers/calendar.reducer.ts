/* Do not edit this file. It was generated programmatically. */
// import { Calendar } from "@/graphql/generated/types/calendar.type";
import { UserFragment } from "@/graphql/generated/fragments/user.fragment";
import { CalendarCreationInput } from "@/graphql/generated/inputs/calendar.inputs";
import { ID } from "@/graphql/schema/types";
import { Payload } from "@/utils/data";

export type CalendarData = Partial<CalendarCreationInput> & { id?: ID };
// export type CalendarData = InputData<Calendar>;
// export type InitialCalendarData = InitialData<Calendar, "rank" | "userId">;

export function initializeCalendarData(
  data: Partial<CalendarData>,
  user?: UserFragment | null | undefined
): Partial<CalendarData> {
  if (!user) return data;
  return {
    userId: user.id,
    name: "",
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function calendarDataReducer(state: CalendarData, payload: Payload<CalendarData>) {
  if (payload.field === "init")
    return initializeCalendarData(payload.value as Partial<CalendarData>);
  return { ...state, [payload.field]: payload.value };
}
