/* Do not edit this file. It was generated programmatically. */
// import CalendarEvent from "@/graphql/generated/types/CalendarEvent";
import { UserFragment } from "@/graphql/generated/fragments/user.fragment";
import { CalendarEventCreationInput } from "@/graphql/generated/inputs/calendarEvent.inputs";
import { initializeCalendarEventCalendarId } from "@/graphql/schema/initializers";
import { ID } from "@/graphql/schema/types";
import { Payload } from "@/utils/data";

export type CalendarEventData = Partial<CalendarEventCreationInput> & { id?: ID };
// export type CalendarEventData = InputData<CalendarEvent>;
// export type InitialCalendarEventData = InitialData<CalendarEvent, "rank" | "userId">;

export function initializeCalendarEventData(
  data: Partial<CalendarEventData>,
  user?: UserFragment | null | undefined
): Partial<CalendarEventData> {
  if (!user) return data;
  return {
    userId: user.id,
    title: "",
    calendarId: initializeCalendarEventCalendarId(user),
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function calendarEventDataReducer(
  state: CalendarEventData,
  payload: Payload<CalendarEventData>
) {
  if (payload.field === "init")
    return initializeCalendarEventData(payload.value as Partial<CalendarEventData>);
  return { ...state, [payload.field]: payload.value };
}
