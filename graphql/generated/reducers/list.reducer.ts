/* Do not edit this file. It was generated programmatically. */
// import { List } from "@/graphql/generated/types/list.type";
import { UserFragment } from "@/graphql/generated/fragments/user.fragment";
import { ListCreationInput } from "@/graphql/generated/inputs/list.inputs";
import { ID } from "@/graphql/schema/types";
import { Payload } from "@/utils/data";

export type ListData = Partial<ListCreationInput> & { id?: ID };
// export type ListData = InputData<List>;
// export type InitialListData = InitialData<List, "rank" | "userId">;

export function initializeListData(
  data: Partial<ListData>,
  user?: UserFragment | null | undefined
): Partial<ListData> {
  if (!user) return data;
  return {
    userId: user.id,
    name: "",
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function listDataReducer(state: ListData, payload: Payload<ListData>) {
  if (payload.field === "init") return initializeListData(payload.value as Partial<ListData>);
  return { ...state, [payload.field]: payload.value };
}
