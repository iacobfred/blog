/* Do not edit this file. It was generated programmatically. */
// import { ListItem } from "@/graphql/generated/types/listItem.type";
import { UserFragment } from "@/graphql/generated/fragments/user.fragment";
import { ListItemCreationInput } from "@/graphql/generated/inputs/listItem.inputs";
import { ID } from "@/graphql/schema/types";
import { Payload } from "@/utils/data";

export type ListItemData = Partial<ListItemCreationInput> & { id?: ID };
// export type ListItemData = InputData<ListItem>;
// export type InitialListItemData = InitialData<ListItem, "rank" | "userId">;

export function initializeListItemData(
  data: Partial<ListItemData>,
  user?: UserFragment | null | undefined
): Partial<ListItemData> {
  if (!user) return data;
  return {
    userId: user.id,
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function listItemDataReducer(state: ListItemData, payload: Payload<ListItemData>) {
  if (payload.field === "init")
    return initializeListItemData(payload.value as Partial<ListItemData>);
  return { ...state, [payload.field]: payload.value };
}
