/* Do not edit this file. It was generated programmatically. */
// import Value from "@/graphql/generated/types/Value";
import { UserFragment } from "@/graphql/generated/fragments/user.fragment";
import { ValueCreationInput } from "@/graphql/generated/inputs/value.inputs";
import { ID } from "@/graphql/schema/types";
import { Payload } from "@/utils/data";

export type ValueData = Partial<ValueCreationInput> & { id?: ID };
// export type ValueData = InputData<Value>;
// export type InitialValueData = InitialData<Value, "rank" | "userId">;

export function initializeValueData(
  data: Partial<ValueData>,
  user?: UserFragment | null | undefined
): Partial<ValueData> {
  if (!user) return data;
  return {
    userId: user.id,
    name: "",
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function valueDataReducer(state: ValueData, payload: Payload<ValueData>) {
  if (payload.field === "init") return initializeValueData(payload.value as Partial<ValueData>);
  return { ...state, [payload.field]: payload.value };
}
