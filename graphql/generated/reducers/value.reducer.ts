/* Do not edit this file. It was generated programmatically. */
// import { Value } from "@/graphql/generated/models/value.model";
import { ValueCreationInput } from "@/graphql/generated/inputs/value.inputs";
import { ID } from "@/graphql/schema/types";
import { Payload } from "@/utils/data";

export type ValueData = ValueCreationInput & { id?: ID };
// export type ValueData = InputData<Value>;
// export type InitialValueData = InitialData<Value, "rank" | "userId">;
export type PartialValueData = { userId: ID } & Partial<ValueData>;

export function initializeValueData(data: PartialValueData): ValueData {
  return {
    name: "",
    ...data,
  };
}

export function valueDataReducer(state: ValueData, payload: Payload<ValueData>) {
  if (payload.field === "init") return initializeValueData(payload.value as PartialValueData);
  return { ...state, [payload.field]: payload.value };
}
