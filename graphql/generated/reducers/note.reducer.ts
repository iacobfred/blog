/* Do not edit this file. It was generated programmatically. */
// import { Note } from "@/graphql/generated/models/note.model";
import { UserFragment } from "@/graphql/generated/fragments/user.fragment";
import { NoteCreationInput } from "@/graphql/generated/inputs/note.inputs";
import { ID } from "@/graphql/schema/types";
import { Payload } from "@/utils/data";

export type NoteData = Partial<NoteCreationInput> & { id?: ID };
// export type NoteData = InputData<Note>;
// export type InitialNoteData = InitialData<Note, "rank" | "userId">;

export function initializeNoteData(
  data: Partial<NoteData>,
  user?: UserFragment | null | undefined
): Partial<NoteData> {
  if (!user) return data;
  return {
    userId: user.id,
    title: "",
    ...data,
  };
}

export function noteDataReducer(state: NoteData, payload: Payload<NoteData>) {
  if (payload.field === "init") return initializeNoteData(payload.value as Partial<NoteData>);
  return { ...state, [payload.field]: payload.value };
}
