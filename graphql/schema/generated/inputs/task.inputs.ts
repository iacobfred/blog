/* Do not edit this file. It was generated programmatically. */

import * as Scalars from "@/graphql/schema/scalars";
import * as Types from "@/graphql/schema/types";
import { ID, WhereInput, WhereUniqueInput } from "@/graphql/schema/types";
import * as TypeGraphQL from "type-graphql-v2-fork";

@TypeGraphQL.InputType()
export class TaskCreateInput {
  @TypeGraphQL.Field(() => Scalars.String, { nullable: false })
  title!: Types.String;

  @TypeGraphQL.Field(() => Scalars.String, { nullable: true })
  description?: Types.String | null | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  plannedStartDate?: Types.DateTime | null | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  dueDate?: Types.DateTime | null | undefined;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: false })
  userId!: Types.ID;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: true })
  parentId?: Types.ID | null | undefined;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: true })
  habitId?: Types.ID | null | undefined;

  @TypeGraphQL.Field(() => Scalars.Int, { nullable: false })
  rank!: Types.Number;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  completedAt?: Types.DateTime | null | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  archivedAt?: Types.DateTime | null | undefined;
}

@TypeGraphQL.InputType()
export class TaskUpdateInput {
  @TypeGraphQL.Field(() => Scalars.String, { nullable: true })
  title?: Types.String | undefined;

  @TypeGraphQL.Field(() => Scalars.String, { nullable: true })
  description?: Types.String | null | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  plannedStartDate?: Types.DateTime | null | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  dueDate?: Types.DateTime | null | undefined;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: true })
  userId?: Types.ID | undefined;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: true })
  parentId?: Types.ID | null | undefined;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: true })
  habitId?: Types.ID | null | undefined;

  @TypeGraphQL.Field(() => Scalars.Int, { nullable: true })
  rank?: Types.Number | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  completedAt?: Types.DateTime | null | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  archivedAt?: Types.DateTime | null | undefined;
}

@TypeGraphQL.InputType()
export class TaskWhereInput extends WhereInput {
  @TypeGraphQL.Field(() => Scalars.ObjectIdScalar, { nullable: true })
  id?: ID | undefined;

  @TypeGraphQL.Field(() => Scalars.String, { nullable: true })
  title?: Types.String | null | undefined;

  @TypeGraphQL.Field(() => Scalars.String, { nullable: true })
  description?: Types.String | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  plannedStartDate?: Types.DateTime | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  dueDate?: Types.DateTime | undefined;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: true })
  userId?: Types.ID | null | undefined;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: true })
  parentId?: Types.ID | undefined;

  @TypeGraphQL.Field(() => Scalars.ObjectId, { nullable: true })
  habitId?: Types.ID | undefined;

  @TypeGraphQL.Field(() => Scalars.Int, { nullable: true })
  rank?: Types.Number | null | undefined;

  @TypeGraphQL.Field(() => Scalars.DateTime, { nullable: true })
  completedAt?: Types.DateTime | undefined;
}

@TypeGraphQL.InputType()
export class TaskWhereUniqueInput extends WhereUniqueInput {
  // @TypeGraphQL.Field(() => Scalars.ObjectIdScalar, { nullable: false })
  // id!: ID;
}
