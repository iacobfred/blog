/* Do not edit this file. It was generated programmatically. */

import {
  BookCreateInput,
  BookUpdateInput,
  BookWhereInput,
  BookWhereUniqueInput,
} from "@/graphql/schema/generated/inputs/book.inputs";
import * as TypeGraphQL from "type-graphql-v2-fork";

@TypeGraphQL.ArgsType()
export class CreateBookArgs {
  @TypeGraphQL.Field(() => BookCreateInput, { nullable: false })
  data!: BookCreateInput;
}

@TypeGraphQL.ArgsType()
export class CreateManyBookArgs {
  @TypeGraphQL.Field(() => BookCreateInput, { nullable: false })
  data!: BookCreateInput;
}

@TypeGraphQL.ArgsType()
export class DeleteBookArgs {
  @TypeGraphQL.Field(() => BookWhereUniqueInput, { nullable: false })
  where!: BookWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyBookArgs {
  @TypeGraphQL.Field(() => BookWhereInput, { nullable: false })
  where!: BookWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueBookArgs {
  @TypeGraphQL.Field(() => BookWhereUniqueInput, { nullable: false })
  where!: BookWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyBookArgs {
  @TypeGraphQL.Field(() => BookWhereInput, { nullable: true })
  where?: BookWhereInput;
}

@TypeGraphQL.ArgsType()
export class UpdateBookArgs {
  @TypeGraphQL.Field(() => BookWhereUniqueInput, { nullable: false })
  where!: BookWhereUniqueInput;

  @TypeGraphQL.Field(() => BookUpdateInput, { nullable: false })
  data!: BookUpdateInput;
}

@TypeGraphQL.ArgsType()
export class UpdateManyBookArgs {
  @TypeGraphQL.Field(() => BookWhereInput, { nullable: false })
  where!: BookWhereUniqueInput;

  @TypeGraphQL.Field(() => BookUpdateInput, { nullable: false })
  data!: BookUpdateInput;
}

@TypeGraphQL.ArgsType()
export class UpsertBookArgs {
  @TypeGraphQL.Field(() => BookWhereUniqueInput, { nullable: false })
  where!: BookWhereUniqueInput;

  @TypeGraphQL.Field(() => BookCreateInput, { nullable: false })
  data!: BookCreateInput;

  // @TypeGraphQL.Field(() => BookUpdateInput, { nullable: false })
  // update!: BookUpdateInput;
}
