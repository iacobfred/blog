/* Do not edit this file. It was generated programmatically. */

import {
  TaskCreateInput,
  TaskUpdateInput,
  TaskWhereInput,
  TaskWhereUniqueInput,
} from "@/graphql/schema/generated/inputs/task.inputs";
import * as TypeGraphQL from "type-graphql-v2-fork";

@TypeGraphQL.ArgsType()
export class CreateTaskArgs {
  @TypeGraphQL.Field(() => TaskCreateInput, { nullable: false })
  data!: TaskCreateInput;
}

@TypeGraphQL.ArgsType()
export class CreateManyTaskArgs {
  @TypeGraphQL.Field(() => TaskCreateInput, { nullable: false })
  data!: TaskCreateInput;
}

@TypeGraphQL.ArgsType()
export class DeleteTaskArgs {
  @TypeGraphQL.Field(() => TaskWhereUniqueInput, { nullable: false })
  where!: TaskWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyTaskArgs {
  @TypeGraphQL.Field(() => TaskWhereInput, { nullable: false })
  where!: TaskWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueTaskArgs {
  @TypeGraphQL.Field(() => TaskWhereUniqueInput, { nullable: false })
  where!: TaskWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyTaskArgs {
  @TypeGraphQL.Field(() => TaskWhereInput, { nullable: true })
  where?: TaskWhereInput;
}

@TypeGraphQL.ArgsType()
export class UpdateTaskArgs {
  @TypeGraphQL.Field(() => TaskWhereUniqueInput, { nullable: false })
  where!: TaskWhereUniqueInput;

  @TypeGraphQL.Field(() => TaskUpdateInput, { nullable: false })
  data!: TaskUpdateInput;
}

@TypeGraphQL.ArgsType()
export class UpdateManyTaskArgs {
  @TypeGraphQL.Field(() => TaskWhereInput, { nullable: false })
  where!: TaskWhereUniqueInput;

  @TypeGraphQL.Field(() => TaskUpdateInput, { nullable: false })
  data!: TaskUpdateInput;
}

@TypeGraphQL.ArgsType()
export class UpsertTaskArgs {
  @TypeGraphQL.Field(() => TaskWhereUniqueInput, { nullable: false })
  where!: TaskWhereUniqueInput;

  @TypeGraphQL.Field(() => TaskCreateInput, { nullable: false })
  data!: TaskCreateInput;

  // @TypeGraphQL.Field(() => TaskUpdateInput, { nullable: false })
  // update!: TaskUpdateInput;
}
