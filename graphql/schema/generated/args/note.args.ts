/* Do not edit this file. It was generated programmatically. */

import {
  NoteCreateInput,
  NoteUpdateInput,
  NoteWhereInput,
  NoteWhereUniqueInput,
} from "@/graphql/schema/generated/inputs/note.inputs";
import * as TypeGraphQL from "type-graphql-v2-fork";

@TypeGraphQL.ArgsType()
export class CreateNoteArgs {
  @TypeGraphQL.Field(() => NoteCreateInput, { nullable: false })
  data!: NoteCreateInput;
}

@TypeGraphQL.ArgsType()
export class CreateManyNoteArgs {
  @TypeGraphQL.Field(() => NoteCreateInput, { nullable: false })
  data!: NoteCreateInput;
}

@TypeGraphQL.ArgsType()
export class DeleteNoteArgs {
  @TypeGraphQL.Field(() => NoteWhereUniqueInput, { nullable: false })
  where!: NoteWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyNoteArgs {
  @TypeGraphQL.Field(() => NoteWhereInput, { nullable: false })
  where!: NoteWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueNoteArgs {
  @TypeGraphQL.Field(() => NoteWhereUniqueInput, { nullable: false })
  where!: NoteWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyNoteArgs {
  @TypeGraphQL.Field(() => NoteWhereInput, { nullable: true })
  where?: NoteWhereInput;
}

@TypeGraphQL.ArgsType()
export class UpdateNoteArgs {
  @TypeGraphQL.Field(() => NoteWhereUniqueInput, { nullable: false })
  where!: NoteWhereUniqueInput;

  @TypeGraphQL.Field(() => NoteUpdateInput, { nullable: false })
  data!: NoteUpdateInput;
}

@TypeGraphQL.ArgsType()
export class UpdateManyNoteArgs {
  @TypeGraphQL.Field(() => NoteWhereInput, { nullable: false })
  where!: NoteWhereUniqueInput;

  @TypeGraphQL.Field(() => NoteUpdateInput, { nullable: false })
  data!: NoteUpdateInput;
}

@TypeGraphQL.ArgsType()
export class UpsertNoteArgs {
  @TypeGraphQL.Field(() => NoteWhereUniqueInput, { nullable: false })
  where!: NoteWhereUniqueInput;

  @TypeGraphQL.Field(() => NoteCreateInput, { nullable: false })
  data!: NoteCreateInput;

  // @TypeGraphQL.Field(() => NoteUpdateInput, { nullable: false })
  // update!: NoteUpdateInput;
}
