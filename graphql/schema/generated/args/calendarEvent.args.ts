/* Do not edit this file. It was generated programmatically. */

import {
  CalendarEventCreateInput,
  CalendarEventUpdateInput,
  CalendarEventWhereInput,
  CalendarEventWhereUniqueInput,
} from "@/graphql/schema/generated/inputs/calendarEvent.inputs";
import * as TypeGraphQL from "type-graphql-v2-fork";

@TypeGraphQL.ArgsType()
export class CreateCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventCreateInput, { nullable: false })
  data!: CalendarEventCreateInput;
}

@TypeGraphQL.ArgsType()
export class CreateManyCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventCreateInput, { nullable: false })
  data!: CalendarEventCreateInput;
}

@TypeGraphQL.ArgsType()
export class DeleteCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereUniqueInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereInput, { nullable: false })
  where!: CalendarEventWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereUniqueInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereInput, { nullable: true })
  where?: CalendarEventWhereInput;
}

@TypeGraphQL.ArgsType()
export class UpdateCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereUniqueInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;

  @TypeGraphQL.Field(() => CalendarEventUpdateInput, { nullable: false })
  data!: CalendarEventUpdateInput;
}

@TypeGraphQL.ArgsType()
export class UpdateManyCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;

  @TypeGraphQL.Field(() => CalendarEventUpdateInput, { nullable: false })
  data!: CalendarEventUpdateInput;
}

@TypeGraphQL.ArgsType()
export class UpsertCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereUniqueInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;

  @TypeGraphQL.Field(() => CalendarEventCreateInput, { nullable: false })
  data!: CalendarEventCreateInput;

  // @TypeGraphQL.Field(() => CalendarEventUpdateInput, { nullable: false })
  // update!: CalendarEventUpdateInput;
}
