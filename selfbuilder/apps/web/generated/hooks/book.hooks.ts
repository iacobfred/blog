/* Do not edit this file. It was generated programmatically. */

import { MutationHookOptions } from "@apollo/client";
import { BookCreationArgs, BookUpdateArgs } from "@web/generated/graphql/args/book.args";
import { BookFragment } from "@web/generated/graphql/fragments/book.fragment";
import {
  CREATE_BOOK,
  getOptimisticResponseForBookCreation,
  updateCacheAfterCreatingBook,
  UPDATE_BOOK,
} from "@web/generated/graphql/mutations/book.mutations";
import {
  bookCreationInputSchema,
  bookUpdateInputSchema,
} from "@web/generated/graphql/schemas/book.schemas";
import {
  BookData,
  bookReducer,
  booksReducer,
  initializeBookData,
} from "@web/generated/reducers/book.reducer";
import { useHandleMutation } from "@web/hooks/mutation";
import { ArrayAction, Payload } from "@web/hooks/reduction";
import { Dispatch, useReducer } from "react";

type BookCreationMutationHookOptions = MutationHookOptions<
  { createBook: BookFragment },
  BookCreationArgs
>;

export const useCreateBook = (options?: BookCreationMutationHookOptions) => {
  return useHandleMutation<{ createBook: BookFragment }, BookCreationArgs>(
    CREATE_BOOK,
    { ...updateCacheAfterCreatingBook, ...(options ?? {}) },
    bookCreationInputSchema,
    getOptimisticResponseForBookCreation
  );
};

type BookUpdateMutationHookOptions = MutationHookOptions<
  { updateBook: BookFragment },
  BookUpdateArgs
>;

export const useUpdateBook = (options?: BookUpdateMutationHookOptions) => {
  return useHandleMutation<{ updateBook: BookFragment }, BookUpdateArgs>(
    UPDATE_BOOK,
    { refetchQueries: ["GetUser"], ...(options ?? {}) },
    bookUpdateInputSchema
  );
};

export const useBookReducer = (data?: BookData): [BookData, Dispatch<Payload<BookData>>] => {
  const [bookData, dispatchBookData] = useReducer(bookReducer, data ?? {}, initializeBookData);
  return [bookData, dispatchBookData];
};

export const useBooksReducer = (
  data: BookFragment[]
): [BookFragment[], Dispatch<ArrayAction<BookFragment>>] => {
  return useReducer(booksReducer, data);
};
