/* Do not edit this file. It was generated programmatically. */

import { JSONResolver, ObjectIdScalar } from "@web/graphql/schema/scalars";
import { Model } from "@web/graphql/schema/types";
import { Field, ObjectType } from "type-graphql-v2-fork";

@ObjectType()
export class ListItem extends Model {
  // `nullable` in TypeGraphQL actually refers to whether the input is optional.
  // https://typegraphql.com/docs/0.17.2/types-and-fields.html
  @Field(() => ObjectIdScalar, { nullable: false })
  userId!: string;

  // `nullable` in TypeGraphQL actually refers to whether the input is optional.
  // https://typegraphql.com/docs/0.17.2/types-and-fields.html
  @Field(() => ObjectIdScalar, { nullable: false })
  listId!: string;

  // `nullable` in TypeGraphQL actually refers to whether the input is optional.
  // https://typegraphql.com/docs/0.17.2/types-and-fields.html
  @Field(() => JSONResolver, { nullable: false })
  data!: Record<string, unknown>;
}

export default ListItem;
