/* Do not edit this file. It was generated programmatically. */

import {
  DashboardCreationInput,
  DashboardUpdateInput,
  DashboardWhereInput,
  DashboardWhereUniqueInput,
} from "@web/generated/graphql/inputs/dashboard.inputs";
import * as TypeGraphQL from "type-graphql-v2-fork";

@TypeGraphQL.ArgsType()
export class DashboardCreationArgs {
  @TypeGraphQL.Field(() => DashboardCreationInput, { nullable: false })
  data!: DashboardCreationInput;
}

@TypeGraphQL.ArgsType()
export class DashboardsCreationArgs {
  @TypeGraphQL.Field(() => DashboardCreationInput, { nullable: false })
  data!: DashboardCreationInput;
}

@TypeGraphQL.ArgsType()
export class DeleteDashboardArgs {
  @TypeGraphQL.Field(() => DashboardWhereUniqueInput, { nullable: false })
  where!: DashboardWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyDashboardArgs {
  @TypeGraphQL.Field(() => DashboardWhereInput, { nullable: false })
  where!: DashboardWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueDashboardArgs {
  @TypeGraphQL.Field(() => DashboardWhereUniqueInput, { nullable: false })
  where!: DashboardWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyDashboardArgs {
  @TypeGraphQL.Field(() => DashboardWhereInput, { nullable: true })
  where?: DashboardWhereInput;
}

@TypeGraphQL.ArgsType()
export class DashboardUpdateArgs {
  @TypeGraphQL.Field(() => DashboardWhereUniqueInput, { nullable: false })
  where!: DashboardWhereUniqueInput;

  @TypeGraphQL.Field(() => DashboardUpdateInput, { nullable: false })
  data!: DashboardUpdateInput;
}

@TypeGraphQL.ArgsType()
export class ArgsForUpdatingManyDashboards {
  @TypeGraphQL.Field(() => DashboardWhereInput, { nullable: false })
  where!: DashboardWhereUniqueInput;

  @TypeGraphQL.Field(() => DashboardUpdateInput, { nullable: false })
  data!: DashboardUpdateInput;
}

@TypeGraphQL.ArgsType()
export class DistinctDashboardsUpdateArgs {
  @TypeGraphQL.Field(() => [DashboardUpdateArgs], { nullable: false })
  data!: DashboardUpdateArgs[];
}

@TypeGraphQL.ArgsType()
export class DashboardUpsertionArgs {
  @TypeGraphQL.Field(() => DashboardWhereUniqueInput, { nullable: false })
  where!: DashboardWhereUniqueInput;

  @TypeGraphQL.Field(() => DashboardCreationInput, { nullable: false })
  data!: DashboardCreationInput;

  // @TypeGraphQL.Field(() => DashboardUpdateInput, { nullable: false })
  // update!: DashboardUpdateInput;
}
