/* Do not edit this file. It was generated programmatically. */
import { BookFragment } from "@web/generated/graphql/fragments/book.fragment";
import { Book } from "@web/generated/graphql/types";
import { ArrayAction, arrayReducer, Payload } from "@web/hooks/reduction";
import { Data } from "@web/types/data";

export type BookData = Data<Book>;

export function initializeBookData(data: Partial<BookData>): Partial<BookData> {
  return {
    title: "",
    slug: "",
    authorNames: [],
    authorNamesLf: [],
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function bookReducer(state: BookData, payload: Payload<BookData>) {
  if (payload.field === "init") return initializeBookData(payload.value as Partial<BookData>);
  return { ...state, [payload.field]: payload.value };
}

export function booksReducer(state: BookFragment[], action: ArrayAction<BookFragment>) {
  return arrayReducer<BookFragment>(state, action);
}
