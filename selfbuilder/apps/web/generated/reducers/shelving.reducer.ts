/* Do not edit this file. It was generated programmatically. */
import { ShelvingFragment } from "@web/generated/graphql/fragments/shelving.fragment";
import { Shelving } from "@web/generated/graphql/types";
import { ArrayAction, arrayReducer, Payload } from "@web/hooks/reduction";
import { Data } from "@web/types/data";

export type ShelvingData = Data<Shelving>;

export function initializeShelvingData(data: Partial<ShelvingData>): Partial<ShelvingData> {
  return {
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function shelvingReducer(state: ShelvingData, payload: Payload<ShelvingData>) {
  if (payload.field === "init")
    return initializeShelvingData(payload.value as Partial<ShelvingData>);
  return { ...state, [payload.field]: payload.value };
}

export function shelvingsReducer(state: ShelvingFragment[], action: ArrayAction<ShelvingFragment>) {
  return arrayReducer<ShelvingFragment>(state, action);
}
