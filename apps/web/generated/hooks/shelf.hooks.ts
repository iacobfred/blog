/* Do not edit this file. It was generated programmatically. */

import { MutationHookOptions } from "@apollo/client";
import { ShelfCreationArgs, ShelfUpdateArgs } from "@web/generated/graphql/args/shelf.args";
import { ShelfFragment } from "@web/generated/graphql/fragments/shelf.fragment";
import {
  CREATE_SHELF,
  getOptimisticResponseForShelfCreation,
  updateCacheAfterCreatingShelf,
  UPDATE_SHELF,
} from "@web/generated/graphql/mutations/shelf.mutations";
import {
  shelfCreationInputSchema,
  shelfUpdateInputSchema,
} from "@web/generated/graphql/schemas/shelf.schemas";
import {
  initializeShelfData,
  ShelfData,
  shelfReducer,
  shelvesReducer,
} from "@web/generated/reducers/shelf.reducer";
import { useHandleMutation } from "@web/hooks/mutation";
import { ArrayAction, Payload } from "@web/hooks/reduction";
import { Dispatch, useReducer } from "react";

type ShelfCreationMutationHookOptions = MutationHookOptions<
  { createShelf: ShelfFragment },
  ShelfCreationArgs
>;

export const useCreateShelf = (options?: ShelfCreationMutationHookOptions) => {
  return useHandleMutation<{ createShelf: ShelfFragment }, ShelfCreationArgs>(
    CREATE_SHELF,
    { ...updateCacheAfterCreatingShelf, ...(options ?? {}) },
    shelfCreationInputSchema,
    getOptimisticResponseForShelfCreation
  );
};

type ShelfUpdateMutationHookOptions = MutationHookOptions<
  { updateShelf: ShelfFragment },
  ShelfUpdateArgs
>;

export const useUpdateShelf = (options?: ShelfUpdateMutationHookOptions) => {
  return useHandleMutation<{ updateShelf: ShelfFragment }, ShelfUpdateArgs>(
    UPDATE_SHELF,
    { refetchQueries: ["GetUser"], ...(options ?? {}) },
    shelfUpdateInputSchema
  );
};

export const useShelfReducer = (data?: ShelfData): [ShelfData, Dispatch<Payload<ShelfData>>] => {
  const [shelfData, dispatchShelfData] = useReducer(shelfReducer, data ?? {}, initializeShelfData);
  return [shelfData, dispatchShelfData];
};

export const useShelvesReducer = (
  data: ShelfFragment[]
): [ShelfFragment[], Dispatch<ArrayAction<ShelfFragment>>] => {
  return useReducer(shelvesReducer, data);
};
