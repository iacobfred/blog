/* Do not edit this file. It was generated programmatically. */

import {
  ListItemCreationInput,
  ListItemUpdateInput,
  ListItemWhereInput,
  ListItemWhereUniqueInput,
} from "@web/generated/graphql/inputs/listItem.inputs";
import * as TypeGraphQL from "type-graphql-v2-fork";

@TypeGraphQL.ArgsType()
export class ListItemCreationArgs {
  @TypeGraphQL.Field(() => ListItemCreationInput, { nullable: false })
  data!: ListItemCreationInput;
}

@TypeGraphQL.ArgsType()
export class ListItemsCreationArgs {
  @TypeGraphQL.Field(() => ListItemCreationInput, { nullable: false })
  data!: ListItemCreationInput;
}

@TypeGraphQL.ArgsType()
export class DeleteListItemArgs {
  @TypeGraphQL.Field(() => ListItemWhereUniqueInput, { nullable: false })
  where!: ListItemWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyListItemArgs {
  @TypeGraphQL.Field(() => ListItemWhereInput, { nullable: false })
  where!: ListItemWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueListItemArgs {
  @TypeGraphQL.Field(() => ListItemWhereUniqueInput, { nullable: false })
  where!: ListItemWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyListItemArgs {
  @TypeGraphQL.Field(() => ListItemWhereInput, { nullable: true })
  where?: ListItemWhereInput;
}

@TypeGraphQL.ArgsType()
export class ListItemUpdateArgs {
  @TypeGraphQL.Field(() => ListItemWhereUniqueInput, { nullable: false })
  where!: ListItemWhereUniqueInput;

  @TypeGraphQL.Field(() => ListItemUpdateInput, { nullable: false })
  data!: ListItemUpdateInput;
}

@TypeGraphQL.ArgsType()
export class ArgsForUpdatingManyListItems {
  @TypeGraphQL.Field(() => ListItemWhereInput, { nullable: false })
  where!: ListItemWhereUniqueInput;

  @TypeGraphQL.Field(() => ListItemUpdateInput, { nullable: false })
  data!: ListItemUpdateInput;
}

@TypeGraphQL.ArgsType()
export class DistinctListItemsUpdateArgs {
  @TypeGraphQL.Field(() => [ListItemUpdateArgs], { nullable: false })
  data!: ListItemUpdateArgs[];
}

@TypeGraphQL.ArgsType()
export class ListItemUpsertionArgs {
  @TypeGraphQL.Field(() => ListItemWhereUniqueInput, { nullable: false })
  where!: ListItemWhereUniqueInput;

  @TypeGraphQL.Field(() => ListItemCreationInput, { nullable: false })
  data!: ListItemCreationInput;

  // @TypeGraphQL.Field(() => ListItemUpdateInput, { nullable: false })
  // update!: ListItemUpdateInput;
}
