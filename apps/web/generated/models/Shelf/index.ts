/* Do not edit this file. It was generated programmatically. */

import { Shelf } from "@web/generated/interfaces/Shelf";
import { postCreate, postUpdate, preSave } from "@web/generated/models/Shelf/hooks";
import { DEFAULT_SCHEMA_OPTIONS } from "@web/graphql/schema/types";
import mongoose, { HydratedDocument, ModifyResult, UpdateQuery } from "mongoose";
import mongooseLeanVirtuals from "mongoose-lean-virtuals";

const shelfSchema = new mongoose.Schema<Shelf>(
  {
    ownerId: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
      required: true,
    },
    archivedAt: { type: Date, required: false, default: null },
  },
  DEFAULT_SCHEMA_OPTIONS
);

shelfSchema.plugin(mongooseLeanVirtuals);

shelfSchema.pre<HydratedDocument<Shelf>>("save", async function () {
  return Promise.resolve(preSave(this));
});

shelfSchema.post<Shelf>("save", async function (document) {
  await postCreate(document);
});

shelfSchema.post<Shelf>("findOneAndUpdate", async function (_result: Shelf | ModifyResult<Shelf>) {
  // eslint-disable-next-line @typescript-eslint/no-this-alias
  const query = this as unknown as UpdateQuery<Shelf>;
  const updatedFields = query.getUpdate().$set;
  if ((_result as ModifyResult<Shelf>).value) {
    const result = _result as ModifyResult<Shelf>;
    const shelf = result.value;
    if (shelf) {
      if (!result.lastErrorObject?.updatedExisting) {
        await postCreate(shelf);
      } else {
        await postUpdate(shelf, updatedFields);
      }
    }
  } else {
    const result = _result as Shelf;
    await postUpdate(result, updatedFields);
  }
});

export { shelfSchema };

// https://stackoverflow.com/questions/19051041/cannot-overwrite-model-once-compiled-mongoose
export const ShelfModel: mongoose.Model<Shelf> =
  mongoose.models.Shelf || mongoose.model<Shelf>("Shelf", shelfSchema);

export default ShelfModel;
