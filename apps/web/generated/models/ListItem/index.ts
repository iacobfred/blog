/* Do not edit this file. It was generated programmatically. */

import { ListItem } from "@web/generated/interfaces/ListItem";
import { ListItemDocument } from "@web/generated/models/ListItem/document";
import { postCreate, postUpdate, preSave } from "@web/generated/models/ListItem/hooks";
import { DEFAULT_SCHEMA_OPTIONS } from "@web/graphql/schema/types";
import mongoose, { ModifyResult, UpdateQuery } from "mongoose";
import mongooseLeanVirtuals from "mongoose-lean-virtuals";

const listItemSchema = new mongoose.Schema<ListItem>(
  {
    userId: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
    listId: { type: mongoose.Schema.Types.ObjectId, ref: "List", required: true },
    data: { type: Object, required: true },
    archivedAt: { type: Date, required: false, default: null },
  },
  DEFAULT_SCHEMA_OPTIONS
);

listItemSchema.plugin(mongooseLeanVirtuals);

listItemSchema.pre<ListItemDocument>("save", async function () {
  console.log("Saving ListItem", this);
  await preSave(this);
});

listItemSchema.post<ListItemDocument>("save", async function (document) {
  console.log("Saved ListItem", document);
  await postCreate(document);
});

listItemSchema.post<ListItemDocument>(
  "findOneAndUpdate",
  async function (_result: ListItemDocument | ModifyResult<ListItemDocument>) {
    // eslint-disable-next-line @typescript-eslint/no-this-alias
    const query = this as unknown as UpdateQuery<ListItemDocument>;
    const updatedFields = query.getUpdate().$set;
    if ((_result as ModifyResult<ListItemDocument>).value) {
      const result = _result as ModifyResult<ListItemDocument>;
      const listItem = result.value;
      if (listItem) {
        if (!result.lastErrorObject?.updatedExisting) {
          await postCreate(listItem);
        } else {
          await postUpdate(listItem, updatedFields);
        }
      }
    } else {
      const result = _result as ListItemDocument;
      await postUpdate(result, updatedFields);
    }
  }
);

export { listItemSchema };

// https://stackoverflow.com/questions/19051041/cannot-overwrite-model-once-compiled-mongoose
export const ListItemModel =
  mongoose.models.ListItem || mongoose.model<ListItem>("ListItem", listItemSchema);

export default ListItemModel;
