/* Do not edit this file. It was generated programmatically. */

import { Habit } from "@web/generated/interfaces/Habit";
import { postCreate, postUpdate, preSave } from "@web/generated/models/Habit/hooks";
import { DEFAULT_SCHEMA_OPTIONS } from "@web/graphql/schema/types";
import mongoose, { HydratedDocument, ModifyResult, UpdateQuery } from "mongoose";
import mongooseLeanVirtuals from "mongoose-lean-virtuals";

const habitSchema = new mongoose.Schema<Habit>(
  {
    userId: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
      required: true,
    },
    name: {
      type: String,
      trim: true,
      required: true,
    },
    description: {
      type: String,
      trim: true,
      required: false,
      default: null,
    },
    public: {
      type: Boolean,
      required: false,
      default: false,
    },
    cron: {
      type: String,
      trim: true,
      required: false,
      default: null,
    },
    defaultDurationInMinutes: {
      type: Number,
      required: false,
      default: null,
    },
    archivedAt: { type: Date, required: false, default: null },
  },
  DEFAULT_SCHEMA_OPTIONS
);

habitSchema.plugin(mongooseLeanVirtuals);

habitSchema.pre<HydratedDocument<Habit>>("save", async function () {
  return Promise.resolve(preSave(this));
});

habitSchema.post<Habit>("save", async function (document) {
  await postCreate(document);
});

habitSchema.post<Habit>("findOneAndUpdate", async function (_result: Habit | ModifyResult<Habit>) {
  // eslint-disable-next-line @typescript-eslint/no-this-alias
  const query = this as unknown as UpdateQuery<Habit>;
  const updatedFields = query.getUpdate().$set;
  if ((_result as ModifyResult<Habit>).value) {
    const result = _result as ModifyResult<Habit>;
    const habit = result.value;
    if (habit) {
      if (!result.lastErrorObject?.updatedExisting) {
        await postCreate(habit);
      } else {
        await postUpdate(habit, updatedFields);
      }
    }
  } else {
    const result = _result as Habit;
    await postUpdate(result, updatedFields);
  }
});

export { habitSchema };

// https://stackoverflow.com/questions/19051041/cannot-overwrite-model-once-compiled-mongoose
export const HabitModel: mongoose.Model<Habit> =
  mongoose.models.Habit || mongoose.model<Habit>("Habit", habitSchema);

export default HabitModel;
