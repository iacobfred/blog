/* Do not edit this file. It was generated programmatically. */

import { Habit } from "@web/generated/interfaces/Habit";
import { HabitDocument } from "@web/generated/models/Habit/document";
import { postCreate, postUpdate, preSave } from "@web/generated/models/Habit/hooks";
import { DEFAULT_SCHEMA_OPTIONS } from "@web/graphql/schema/types";
import mongoose, { ModifyResult, UpdateQuery } from "mongoose";
import mongooseLeanVirtuals from "mongoose-lean-virtuals";

const habitSchema = new mongoose.Schema<Habit>(
  {
    userId: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
      required: true,
    },
    name: {
      type: String,
      trim: true,
      required: true,
    },
    description: {
      type: String,
      trim: true,
      required: false,
      default: null,
    },
    public: {
      type: Boolean,
      required: false,
      default: false,
    },
    cron: {
      type: String,
      trim: true,
      required: false,
      default: null,
    },
    defaultDurationInMinutes: {
      type: Number,
      required: false,
      default: null,
    },
    archivedAt: { type: Date, required: false, default: null },
  },
  DEFAULT_SCHEMA_OPTIONS
);

habitSchema.plugin(mongooseLeanVirtuals);

habitSchema.pre<HabitDocument>("save", async function () {
  console.log("Saving Habit", this);
  await preSave(this);
});

habitSchema.post<HabitDocument>("save", async function (document) {
  console.log("Saved Habit", document);
  await postCreate(document);
});

habitSchema.post<HabitDocument>(
  "findOneAndUpdate",
  async function (_result: HabitDocument | ModifyResult<HabitDocument>) {
    // eslint-disable-next-line @typescript-eslint/no-this-alias
    const query = this as unknown as UpdateQuery<HabitDocument>;
    const updatedFields = query.getUpdate().$set;
    if ((_result as ModifyResult<HabitDocument>).value) {
      const result = _result as ModifyResult<HabitDocument>;
      const habit = result.value;
      if (habit) {
        if (!result.lastErrorObject?.updatedExisting) {
          await postCreate(habit);
        } else {
          await postUpdate(habit, updatedFields);
        }
      }
    } else {
      const result = _result as HabitDocument;
      await postUpdate(result, updatedFields);
    }
  }
);

export { habitSchema };

// https://stackoverflow.com/questions/19051041/cannot-overwrite-model-once-compiled-mongoose
export const HabitModel = mongoose.models.Habit || mongoose.model<Habit>("Habit", habitSchema);

export default HabitModel;
