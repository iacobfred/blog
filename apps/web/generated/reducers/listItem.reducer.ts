/* Do not edit this file. It was generated programmatically. */
// import ListItem from "@web/generated/types/ListItem";
import { ListItemCreationInput } from "@web/graphql/generated/inputs/listItem.inputs";
import { ID } from "@web/graphql/schema/types";
import { Payload, ArrayAction, arrayReducer } from "@web/utils/data/reduction";
import { ListItemFragment } from "@web/graphql/generated/fragments/listItem.fragment";
import { UserFragment } from "@web/graphql/generated/fragments/user.fragment";

export type ListItemData = Partial<ListItemCreationInput> & { id?: ID };
// export type ListItemData = InputData<ListItem>;
// export type InitialListItemData = InitialData<ListItem, "rank" | "userId">;

export function initializeListItemData(
  data: Partial<ListItemData>,
  user?: UserFragment | null | undefined
): Partial<ListItemData> {
  const userId = user?.id;
  if (!userId) return data;
  return {
    userId,
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function listItemReducer(state: ListItemData, payload: Payload<ListItemData>) {
  if (payload.field === "init")
    return initializeListItemData(payload.value as Partial<ListItemData>);
  return { ...state, [payload.field]: payload.value };
}

export function listItemsReducer(state: ListItemFragment[], action: ArrayAction<ListItemFragment>) {
  return arrayReducer<ListItemFragment>(state, action);
}
