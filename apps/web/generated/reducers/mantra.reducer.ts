/* Do not edit this file. It was generated programmatically. */
import { MantraFragment } from "@web/generated/graphql/fragments/mantra.fragment";
import { UserFragment } from "@web/generated/graphql/fragments/user.fragment";
import { Mantra } from "@web/generated/graphql/types";
import { ArrayAction, arrayReducer, Payload } from "@web/hooks/reduction";
import { Data } from "@web/types/data";

export type MantraData = Data<Mantra>;

export function initializeMantraData(
  data: Partial<MantraData>,
  user?: UserFragment | null | undefined
): Partial<MantraData> {
  const userId = user?.id;
  if (!userId) return data;
  return {
    userId,
    content: "",
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function mantraReducer(state: MantraData, payload: Payload<MantraData>) {
  if (payload.field === "init") return initializeMantraData(payload.value as Partial<MantraData>);
  return { ...state, [payload.field]: payload.value };
}

export function mantrasReducer(state: MantraFragment[], action: ArrayAction<MantraFragment>) {
  return arrayReducer<MantraFragment>(state, action);
}
