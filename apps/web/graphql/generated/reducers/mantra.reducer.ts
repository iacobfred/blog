/* Do not edit this file. It was generated programmatically. */
// import Mantra from "@web/graphql/generated/types/Mantra";
import { MantraFragment } from "@web/graphql/generated/fragments/mantra.fragment";
import { UserFragment } from "@web/graphql/generated/fragments/user.fragment";
import { MantraCreationInput } from "@web/graphql/generated/inputs/mantra.inputs";
import { ID } from "@web/graphql/schema/types";
import { ArrayAction, arrayReducer, Payload } from "@web/utils/data/reduction";

export type MantraData = Partial<MantraCreationInput> & { id?: ID };
// export type MantraData = InputData<Mantra>;
// export type InitialMantraData = InitialData<Mantra, "rank" | "userId">;

export function initializeMantraData(
  data: Partial<MantraData>,
  user?: UserFragment | null | undefined
): Partial<MantraData> {
  if (!user) return data;
  return {
    userId: user.id,
    content: "",
    ...Object.fromEntries(Object.entries(data).filter(([, value]) => value !== undefined)), // TODO: make this unnecessary
  };
}

export function mantraReducer(state: MantraData, payload: Payload<MantraData>) {
  if (payload.field === "init") return initializeMantraData(payload.value as Partial<MantraData>);
  return { ...state, [payload.field]: payload.value };
}

export function mantrasReducer(state: MantraFragment[], action: ArrayAction<MantraFragment>) {
  return arrayReducer<MantraFragment>(state, action);
}
