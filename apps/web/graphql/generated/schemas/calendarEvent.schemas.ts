/* Do not edit this file. It was generated programmatically. */

import { object, string, date, bool, InferType, SchemaOf } from "yup";
import {
  CalendarEventCreationInput,
  CalendarEventUpdateInput,
} from "@web/graphql/generated/inputs/calendarEvent.inputs";

export const calendarEventCreationInputSchema: SchemaOf<CalendarEventCreationInput> = object({
  userId: string().required(),
  calendarId: string().required(),
  remoteId: string().nullable().notRequired(),
  scheduleId: string().nullable().notRequired(),
  habitId: string().nullable().notRequired(),
  taskId: string().nullable().notRequired(),
  title: string().required(),
  start: date().required(),
  end: date().nullable().notRequired(),
  allDay: bool()
    .notRequired()
    .default(() => {
      return false;
    }),
  notes: string().nullable().notRequired(),
  canceled: bool().nullable().notRequired(),
  archivedAt: date().nullable().notRequired(),
});

export const calendarEventUpdateInputSchema: SchemaOf<CalendarEventUpdateInput> = object({
  userId: string().notRequired(),
  calendarId: string().notRequired(),
  remoteId: string().nullable().notRequired(),
  scheduleId: string().nullable().notRequired(),
  habitId: string().nullable().notRequired(),
  taskId: string().nullable().notRequired(),
  title: string().notRequired(),
  start: date().notRequired(),
  end: date().nullable().notRequired(),
  allDay: bool().notRequired(),
  notes: string().nullable().notRequired(),
  canceled: bool().nullable().notRequired(),
  archivedAt: date().nullable().notRequired(),
});

export type CalendarEventCreationInputSchemaType = InferType<
  typeof calendarEventCreationInputSchema
>;
export type CalendarEventUpdateInputSchemaType = InferType<typeof calendarEventUpdateInputSchema>;
