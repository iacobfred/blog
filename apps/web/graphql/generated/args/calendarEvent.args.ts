/* Do not edit this file. It was generated programmatically. */

import * as TypeGraphQL from "type-graphql-v2-fork";
import {
  CalendarEventWhereInput,
  CalendarEventWhereUniqueInput,
  CalendarEventCreationInput,
  CalendarEventUpdateInput,
} from "@web/graphql/generated/inputs/calendarEvent.inputs";

@TypeGraphQL.ArgsType()
export class CalendarEventCreationArgs {
  @TypeGraphQL.Field(() => CalendarEventCreationInput, { nullable: false })
  data!: CalendarEventCreationInput;
}

@TypeGraphQL.ArgsType()
export class CalendarEventsCreationArgs {
  @TypeGraphQL.Field(() => CalendarEventCreationInput, { nullable: false })
  data!: CalendarEventCreationInput;
}

@TypeGraphQL.ArgsType()
export class DeleteCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereUniqueInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereInput, { nullable: false })
  where!: CalendarEventWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereUniqueInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyCalendarEventArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereInput, { nullable: true })
  where?: CalendarEventWhereInput;
}

@TypeGraphQL.ArgsType()
export class CalendarEventUpdateArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereUniqueInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;

  @TypeGraphQL.Field(() => CalendarEventUpdateInput, { nullable: false })
  data!: CalendarEventUpdateInput;
}

@TypeGraphQL.ArgsType()
export class ArgsForUpdatingManyCalendarEvents {
  @TypeGraphQL.Field(() => CalendarEventWhereInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;

  @TypeGraphQL.Field(() => CalendarEventUpdateInput, { nullable: false })
  data!: CalendarEventUpdateInput;
}

@TypeGraphQL.ArgsType()
export class DistinctCalendarEventsUpdateArgs {
  @TypeGraphQL.Field(() => [CalendarEventUpdateArgs], { nullable: false })
  data!: CalendarEventUpdateArgs[];
}

@TypeGraphQL.ArgsType()
export class CalendarEventUpsertionArgs {
  @TypeGraphQL.Field(() => CalendarEventWhereUniqueInput, { nullable: false })
  where!: CalendarEventWhereUniqueInput;

  @TypeGraphQL.Field(() => CalendarEventCreationInput, { nullable: false })
  data!: CalendarEventCreationInput;

  // @TypeGraphQL.Field(() => CalendarEventUpdateInput, { nullable: false })
  // update!: CalendarEventUpdateInput;
}
