/* Do not edit this file. It was generated programmatically. */

import * as TypeGraphQL from "type-graphql-v2-fork";
import {
  BookWhereInput,
  BookWhereUniqueInput,
  BookCreationInput,
  BookUpdateInput,
} from "@web/graphql/generated/inputs/book.inputs";

@TypeGraphQL.ArgsType()
export class BookCreationArgs {
  @TypeGraphQL.Field(() => BookCreationInput, { nullable: false })
  data!: BookCreationInput;
}

@TypeGraphQL.ArgsType()
export class BooksCreationArgs {
  @TypeGraphQL.Field(() => BookCreationInput, { nullable: false })
  data!: BookCreationInput;
}

@TypeGraphQL.ArgsType()
export class DeleteBookArgs {
  @TypeGraphQL.Field(() => BookWhereUniqueInput, { nullable: false })
  where!: BookWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyBookArgs {
  @TypeGraphQL.Field(() => BookWhereInput, { nullable: false })
  where!: BookWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueBookArgs {
  @TypeGraphQL.Field(() => BookWhereUniqueInput, { nullable: false })
  where!: BookWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyBookArgs {
  @TypeGraphQL.Field(() => BookWhereInput, { nullable: true })
  where?: BookWhereInput;
}

@TypeGraphQL.ArgsType()
export class BookUpdateArgs {
  @TypeGraphQL.Field(() => BookWhereUniqueInput, { nullable: false })
  where!: BookWhereUniqueInput;

  @TypeGraphQL.Field(() => BookUpdateInput, { nullable: false })
  data!: BookUpdateInput;
}

@TypeGraphQL.ArgsType()
export class ArgsForUpdatingManyBooks {
  @TypeGraphQL.Field(() => BookWhereInput, { nullable: false })
  where!: BookWhereUniqueInput;

  @TypeGraphQL.Field(() => BookUpdateInput, { nullable: false })
  data!: BookUpdateInput;
}

@TypeGraphQL.ArgsType()
export class DistinctBooksUpdateArgs {
  @TypeGraphQL.Field(() => [BookUpdateArgs], { nullable: false })
  data!: BookUpdateArgs[];
}

@TypeGraphQL.ArgsType()
export class BookUpsertionArgs {
  @TypeGraphQL.Field(() => BookWhereUniqueInput, { nullable: false })
  where!: BookWhereUniqueInput;

  @TypeGraphQL.Field(() => BookCreationInput, { nullable: false })
  data!: BookCreationInput;

  // @TypeGraphQL.Field(() => BookUpdateInput, { nullable: false })
  // update!: BookUpdateInput;
}
