/* Do not edit this file. It was generated programmatically. */

import * as TypeGraphQL from "type-graphql-v2-fork";
import {
  UserWhereInput,
  UserWhereUniqueInput,
  UserCreationInput,
  UserUpdateInput,
} from "@web/graphql/generated/inputs/user.inputs";

@TypeGraphQL.ArgsType()
export class UserCreationArgs {
  @TypeGraphQL.Field(() => UserCreationInput, { nullable: false })
  data!: UserCreationInput;
}

@TypeGraphQL.ArgsType()
export class UsersCreationArgs {
  @TypeGraphQL.Field(() => UserCreationInput, { nullable: false })
  data!: UserCreationInput;
}

@TypeGraphQL.ArgsType()
export class DeleteUserArgs {
  @TypeGraphQL.Field(() => UserWhereUniqueInput, { nullable: false })
  where!: UserWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class DeleteManyUserArgs {
  @TypeGraphQL.Field(() => UserWhereInput, { nullable: false })
  where!: UserWhereInput;
}

@TypeGraphQL.ArgsType()
export class FindUniqueUserArgs {
  @TypeGraphQL.Field(() => UserWhereUniqueInput, { nullable: false })
  where!: UserWhereUniqueInput;
}

@TypeGraphQL.ArgsType()
export class FindManyUserArgs {
  @TypeGraphQL.Field(() => UserWhereInput, { nullable: true })
  where?: UserWhereInput;
}

@TypeGraphQL.ArgsType()
export class UserUpdateArgs {
  @TypeGraphQL.Field(() => UserWhereUniqueInput, { nullable: false })
  where!: UserWhereUniqueInput;

  @TypeGraphQL.Field(() => UserUpdateInput, { nullable: false })
  data!: UserUpdateInput;
}

@TypeGraphQL.ArgsType()
export class ArgsForUpdatingManyUsers {
  @TypeGraphQL.Field(() => UserWhereInput, { nullable: false })
  where!: UserWhereUniqueInput;

  @TypeGraphQL.Field(() => UserUpdateInput, { nullable: false })
  data!: UserUpdateInput;
}

@TypeGraphQL.ArgsType()
export class DistinctUsersUpdateArgs {
  @TypeGraphQL.Field(() => [UserUpdateArgs], { nullable: false })
  data!: UserUpdateArgs[];
}

@TypeGraphQL.ArgsType()
export class UserUpsertionArgs {
  @TypeGraphQL.Field(() => UserWhereUniqueInput, { nullable: false })
  where!: UserWhereUniqueInput;

  @TypeGraphQL.Field(() => UserCreationInput, { nullable: false })
  data!: UserCreationInput;

  // @TypeGraphQL.Field(() => UserUpdateInput, { nullable: false })
  // update!: UserUpdateInput;
}
