/* Do not edit this file. It was generated programmatically. */

import { ModelOptions, post, pre, prop as Property } from "@typegoose/typegoose";
import { DEFAULT_MODEL_OPTIONS } from "@web/graphql/schema/constants";
import { JSONResolver, ObjectIdScalar } from "@web/graphql/schema/scalars";
import { Model } from "@web/graphql/schema/types";
import * as TypeGraphQL from "type-graphql-v2-fork";
import { postSave, postUpdate, preSave } from "./hooks";

@TypeGraphQL.ObjectType()
@ModelOptions(DEFAULT_MODEL_OPTIONS)
@pre<ListItem>("save", preSave)
@post<ListItem>("save", postSave)
@post<ListItem>("findOneAndUpdate", postUpdate)
export default class ListItem extends Model {
  @TypeGraphQL.Field(() => ObjectIdScalar, { nullable: false })
  @Property({ required: true })
  userId!: string;

  @TypeGraphQL.Field(() => ObjectIdScalar, { nullable: false })
  @Property({ required: true })
  listId!: string;

  @TypeGraphQL.Field(() => JSONResolver, { nullable: false })
  @Property({ required: true })
  data!: Record<string, unknown>;
}
