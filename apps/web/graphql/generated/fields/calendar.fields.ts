/* Do not edit this file. It was generated programmatically. */

import { Field } from "@web/graphql/schema/definition";
import { CalendarFragment } from "@web/graphql/generated/fragments/calendar.fragment";

type FieldKey = Exclude<
  keyof CalendarFragment,
  "id" | "_id" | "createdAt" | "updatedAt" | "__typename"
>;

const fields: Record<FieldKey, Field> = {
  userId: {
    label: "userId",
    type: "ID",
    required: true,
    widget: {},
  },
  name: {
    label: "name",
    type: "String",
    required: true,
    widget: {},
  },
  color: {
    label: "color",
    type: "String",
    required: false,
    widget: {},
  },
  provider: {
    label: "provider",
    type: "String",
    required: false,
    widget: {},
  },
  remoteId: {
    label: "remoteId",
    type: "String",
    required: false,
    widget: {},
  },
  syncToken: {
    label: "syncToken",
    type: "String",
    required: false,
    widget: {},
  },
  accountId: {
    label: "accountId",
    type: "ID",
    required: false,
    widget: {},
  },
  primary: {
    label: "primary",
    type: "Boolean",
    required: false,
    widget: {},
  },
  public: {
    label: "public",
    type: "Boolean",
    required: false,
    widget: {},
  },
  enabled: {
    label: "enabled",
    type: "Boolean",
    required: false,
    widget: {},
  },
  archivedAt: {
    label: "Archived at",
    type: "DateTime",
    required: false,
  },
};

export default fields;
