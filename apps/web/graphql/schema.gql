# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

schema {
  query: Query
  mutation: Mutation
}

type Account {
  _id: ObjectId!
  accessToken: String
  accessTokenExpiry: DateTimeISO
  archivedAt: DateTimeISO
  createdAt: DateTimeISO!
  id: ObjectId!
  provider: String!
  refreshToken: String
  remoteId: String!
  scopes: [String!]!
  syncToken: String
  updatedAt: DateTimeISO!
  userId: ObjectId!
}

type Calendar {
  _id: ObjectId!
  accountId: ObjectId
  archivedAt: DateTimeISO
  color: String
  createdAt: DateTimeISO!
  enabled: Boolean
  id: ObjectId!
  name: String!
  primary: Boolean
  provider: String
  public: Boolean
  remoteId: String
  syncToken: String
  updatedAt: DateTimeISO!
  userId: ObjectId!
}

type CalendarEvent {
  _id: ObjectId!
  allDay: Boolean
  archivedAt: DateTimeISO
  calendarId: ObjectId!
  canceled: Boolean
  createdAt: DateTimeISO!
  end: DateTimeISO
  habitId: ObjectId
  id: ObjectId!
  notes: String
  remoteId: String
  scheduleId: ObjectId
  start: DateTimeISO!
  taskId: ObjectId
  title: String!
  updatedAt: DateTimeISO!
  userId: ObjectId!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTimeISO

type Goal {
  _id: ObjectId!
  archivedAt: DateTimeISO
  createdAt: DateTimeISO!
  description: String!
  habitId: ObjectId
  id: ObjectId!
  parentId: ObjectId
  updatedAt: DateTimeISO!
  userId: ObjectId!
}

type Habit {
  _id: ObjectId!
  archivedAt: DateTimeISO
  createdAt: DateTimeISO!
  cron: String
  defaultDurationInMinutes: Int
  description: String
  id: ObjectId!
  name: String!
  public: Boolean
  updatedAt: DateTimeISO!
  userId: ObjectId!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mantra {
  _id: ObjectId!
  archivedAt: DateTimeISO
  content: String!
  createdAt: DateTimeISO!
  id: ObjectId!
  updatedAt: DateTimeISO!
  userId: ObjectId!
}

type Mutation {
  createUser(data: UserCreationInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  upsertUser(data: UserCreationInput!, where: UserWhereUniqueInput!): User!
}

type Notebook {
  _id: ObjectId!
  archivedAt: DateTimeISO
  createdAt: DateTimeISO!
  description: String
  id: ObjectId!
  public: Boolean
  title: String!
  updatedAt: DateTimeISO!
  userId: ObjectId!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
  currentUser: User
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput): [User!]!
}

type Task {
  _id: ObjectId!
  archivedAt: DateTimeISO
  completedAt: DateTimeISO
  createdAt: DateTimeISO!
  description: String
  dueDate: DateTimeISO
  expectedDuration: Int
  habitId: ObjectId
  id: ObjectId!
  parentId: ObjectId
  plannedStartDate: DateTimeISO
  rank: Int!
  title: String!
  updatedAt: DateTimeISO!
  userId: ObjectId!
}

type User {
  _id: ObjectId!
  accounts: [Account!]
  archivedAt: DateTimeISO
  calendarEvents: [CalendarEvent!]
  calendars: [Calendar!]
  createdAt: DateTimeISO!
  email: String!
  emailVerified: Boolean
  goals: [Goal!]
  habits: [Habit!]
  id: ObjectId!
  image: String
  isAdmin: Boolean
  lastLogin: DateTimeISO
  mantras: [Mantra!]
  name: String
  notebooks: [Notebook!]
  password: String
  settings: JSON
  tasks: [Task!]
  updatedAt: DateTimeISO!
}

input UserCreationInput {
  archivedAt: DateTimeISO
  email: String!
  emailVerified: Boolean
  image: String
  isAdmin: Boolean
  lastLogin: DateTimeISO
  name: String
  settings: JSON
}

input UserUpdateInput {
  archivedAt: DateTimeISO
  email: String
  emailVerified: Boolean
  image: String
  isAdmin: Boolean
  lastLogin: DateTimeISO
  name: String
  settings: JSON
}

input UserWhereInput {
  createdAt: DateTimeISO
  email: String
  emailVerified: Boolean
  id: ObjectId
  image: String
  isAdmin: Boolean
  lastLogin: DateTimeISO
  name: String
  settings: JSON
  updatedAt: DateTimeISO
}

input UserWhereUniqueInput {
  email: String
  id: ObjectId
}