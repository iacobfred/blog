x-default:
  &default
  deploy:
    restart_policy:
      condition: "${DOCKER_DEFAULT_RESTART_POLICY:-unless-stopped}"
  env_file:
    - .env

services:
  nextjs:
    <<: *default
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    image: ghcr.io/iacobfred/selfbuilder:latest
    depends_on:
      - mongo
    ports:
      - "127.0.0.1:${NEXTJS_PORT}:${NEXTJS_PORT}"
    environment:
      MONGODB_HOST: mongo
      NEXTAUTH_URL_INTERNAL: "http://nextjs:${NEXTJS_PORT}"
  mongo:
    <<: *default
    image: mongo:6
    healthcheck:
      test: bash /healthcheck.sh
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    expose:
      - "27017"
    volumes:
      - data:/data
      - .config/healthchecks/mongo-healthcheck.sh:/healthcheck.sh
      - .config/scripts/entrypoints/mongo:/docker-entrypoint-initdb.d
  redis:
    image: redis
    deploy:
      restart_policy:
        condition: unless-stopped
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - "data:/data"
  # cypress:
  #   # https://github.com/cypress-io/cypress-docker-images
  #   image: "cypress/included:8.4.1"
  #   # depends_on:
  #   #   nextjs:
  #   #     condition: service_healthy
  #   environment:
  #     - CYPRESS_baseUrl=http://localhost:${NEXTJS_PORT}/
  #   working_dir: /e2e
  #   volumes:
  #     - ./cypress:/e2e/cypress
  #     - ./cypress.json:/e2e/cypress.json

  # For more information on how volumes work, please see https://docs.docker.com/storage/volumes/
volumes:
  # Note: `data` is used by both redis and mongodb
  data: null
  postgres_data: null
