##
# Nginx config file references:
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
##

# NOTE: This proxy_cache_path must be defined in the root Nginx config that includes this file.
# http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path
# proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off max_size=10g;

resolver 127.0.0.11 valid=30s;
set $nextjs_server http://127.0.0.1:3001;

# Remove the Nginx version from response headers.
server_tokens off;

# Enable compression.
gzip on;
gzip_proxied any;
gzip_comp_level 4;
gzip_types text/css application/javascript image/svg+xml;

# https://nextjs.org/docs/going-to-production#caching
location ^~ /_next/static/ {
    proxy_cache STATIC;
    proxy_pass $nextjs_server;

    # TODO: Determine whether it's better to let Next.js handle initial service
    # (since Next.js adds caching headers) or to serve directly from Nginx.
    # alias /orega/.next/static/;

    # Use the following to test the cache; remove before deploying to production.
    # add_header X-Cache-Status $upstream_cache_status;
}

location ~* ^/.*\\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|ttf)$ {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_ignore_headers Set-Cookie;
    proxy_cache_valid 60m;
    proxy_pass $nextjs_server;

    # Use the following to test the cache; remove before deploying to production.
    # add_header X-Cache-Status $upstream_cache_status;
}

location / {
    proxy_pass $nextjs_server;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;

    # Websockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_cache_bypass $http_upgrade;

    # Note: This cannot remove the slash from the base path ("/").
    # All requests must have a path, and the base path is a single slash.
    # Hence, we use + rather than * before the trailing slash in the regex.
    rewrite ^([^.]+)/$ $1 permanent;
}
