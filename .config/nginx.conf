##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
##

# https://serverfault.com/questions/1030551/force-nginx-to-use-browser-port-on-redirect-instead-of-docker-mapping-port
# port_in_redirect off;

# http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path
# proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC_CACHE:10m inactive=7d use_temp_path=off max_size=10g;
  
resolver 127.0.0.11 valid=30s;
set $nextjs_server http://127.0.0.1:3000;

# Verify certificate.
location /.well-known/acme-challenge/ {
    allow all;
    root /var/www/certbot;
}

# Serve media files.
# location /media/ {
#     alias /orega/_volumes/media/;
#     add_header Access-Control-Allow-Origin *;
#     expires 30d;  # cache in browser
# }

# TODO: Get frontend/.next dir onto prod server first.
# Serve Next.js static files from Nginx (instead of passing to next_server).
# location ^~ /_next/static/ {
#     proxy_cache STATIC_CACHE;
#     alias /orega/.next/static/;
#     add_header Access-Control-Allow-Origin *;
# }

location / {
    proxy_pass $nextjs_server;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;

    rewrite ^([^.]*[^/])$ $1/ permanent;
}
