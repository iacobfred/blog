/* Do not edit this file. It was generated programmatically. */

import { ShelvingCreationArgs, ShelvingUpdateArgs } from "@/generated/args/shelving.args";
import { ShelvingFragment } from "@/generated/fragments/shelving.fragment";
import {
  CREATE_SHELVING,
  updateCacheAfterCreatingShelving,
  UPDATE_SHELVING,
} from "@/generated/mutations/shelving.mutations";
import {
  initializeShelvingData,
  ShelvingData,
  shelvingDataReducer,
} from "@/generated/reducers/shelving.reducer";
import { Payload, useHandleMutation } from "@/utils/data";
import { MutationHookOptions } from "@apollo/client";
import { Dispatch, useReducer } from "react";

type ShelvingCreationMutationHookOptions = MutationHookOptions<
  { createShelving: ShelvingFragment },
  ShelvingCreationArgs
>;

export const useCreateShelving = (options?: ShelvingCreationMutationHookOptions) => {
  return useHandleMutation<{ createShelving: ShelvingFragment }, ShelvingCreationArgs>(
    CREATE_SHELVING,
    {
      ...updateCacheAfterCreatingShelving,
      ...(options ?? {}),
    }
  );
};

type ShelvingUpdateMutationHookOptions = MutationHookOptions<
  { updateShelving: ShelvingFragment },
  ShelvingUpdateArgs
>;

export const useUpdateShelving = (options?: ShelvingUpdateMutationHookOptions) => {
  return useHandleMutation<{ updateShelving: ShelvingFragment }, ShelvingUpdateArgs>(
    UPDATE_SHELVING,
    options
  );
};

export const useShelvingDataReducer = (
  data: ShelvingData
): [ShelvingData, Dispatch<Payload<ShelvingData>>] => {
  const initialData = initializeShelvingData(data);
  const [shelvingData, dispatchShelvingData] = useReducer(
    shelvingDataReducer,
    initialData,
    initializeShelvingData
  );
  return [shelvingData, dispatchShelvingData];
};
