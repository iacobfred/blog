/* Do not edit this file. It was generated programmatically. */

import { ListItemCreationArgs, ListItemUpdateArgs } from "@/generated/args/listItem.args";
import { ListItemFragment } from "@/generated/fragments/listItem.fragment";
import {
  CREATE_LIST_ITEM,
  updateCacheAfterCreatingListItem,
  UPDATE_LIST_ITEM,
} from "@/generated/mutations/listItem.mutations";
import {
  initializeListItemData,
  ListItemData,
  listItemDataReducer,
} from "@/generated/reducers/listItem.reducer";
import { Payload, useHandleMutation } from "@/utils/data";
import { MutationHookOptions } from "@apollo/client";
import { Dispatch, useEffect, useReducer } from "react";
// import { useUser } from "@/components/contexts/UserContext";

type ListItemCreationMutationHookOptions = MutationHookOptions<
  { createListItem: ListItemFragment },
  ListItemCreationArgs
>;

export const useCreateListItem = (options?: ListItemCreationMutationHookOptions) => {
  return useHandleMutation<{ createListItem: ListItemFragment }, ListItemCreationArgs>(
    CREATE_LIST_ITEM,
    {
      ...updateCacheAfterCreatingListItem,
      ...(options ?? {}),
    }
  );
};

type ListItemUpdateMutationHookOptions = MutationHookOptions<
  { updateListItem: ListItemFragment },
  ListItemUpdateArgs
>;

export const useUpdateListItem = (options?: ListItemUpdateMutationHookOptions) => {
  return useHandleMutation<{ updateListItem: ListItemFragment }, ListItemUpdateArgs>(
    UPDATE_LIST_ITEM,
    options
  );
};

export const useListItemDataReducer = (
  data: ListItemData
): [ListItemData, Dispatch<Payload<ListItemData>>] => {
  const initialData = initializeListItemData(data);
  const [listItemData, dispatchListItemData] = useReducer(
    listItemDataReducer,
    initialData,
    initializeListItemData
  );
  useEffect(() => {
    if (data.userId && !listItemData?.userId) {
      console.log("Dispatching listItem data!");
      dispatchListItemData({ field: "init", value: data });
    }
  }, [data, listItemData]);
  return [listItemData, dispatchListItemData];
};
