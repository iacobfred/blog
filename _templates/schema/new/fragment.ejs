---
to: graphql/generated/fragments/<%= name %>.fragment.ts
force: true
---
/* Do not edit this file. It was generated programmatically. */

import { gql } from "@apollo/client";
import <%= Name %> from "@/graphql/generated/types/<%= Name %>";
<% for (var modelImport of modelImports) { -%>
import { <%= h.changeCase.camel(modelImport) %>Fragment } from "@/graphql/generated/fragments/<%= h.changeCase.camel(modelImport) %>.fragment";
<% } -%>

export const <%= name %>Fragment = gql`
  fragment <%= Name %>Fragment on <%= Name %> {
    __typename
    id
<% for (var fieldName of Object.keys(selectableFields)) { -%>
    <%= fieldName %><%= modelImports.includes(h.changeCase.pascal(h.inflection.singularize(fieldName))) ? ` { ...${h.changeCase.pascal(h.inflection.singularize(fieldName))}Fragment }` : "" %>
<% } -%>
    createdAt
    updatedAt
    archivedAt
  }
<% for (var modelImport of modelImports) { -%>
  ${<%= h.changeCase.camel(modelImport) %>Fragment}
<% } -%>
`;

export type <%= Name %>Fragment = Pick<
  <%= Name %>,
  | "__typename"
  | "id"
  | "createdAt"
  | "updatedAt"
  | "archivedAt"<% for (var [i, fieldName] of Object.keys(selectableFields).entries()) { %>
  | "<%= fieldName %>"<% } %>
>;
