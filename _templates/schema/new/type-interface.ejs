---
to: apps/web/generated/interfaces/<%= Name %>.ts
force: true
---
/* Do not edit this file. It was generated programmatically. */

import mongoose from 'mongoose';
<% for (var model of modelImports) { -%>
import <%= h.changeCase.pascal(model) %> from "@web/generated/interfaces/<%= h.changeCase.pascal(model) %>";
<% } -%>
<% for (var [fieldName, field] of Object.entries(fields).filter(([,field]) => (field.type === "Map" && field.shape))) { -%>
import { <%= h.changeCase.pascal(fieldName) %> } from '@web/generated/models/<%= Name %>/types';
<% } -%>

// https://mongoosejs.com/docs/typescript.html

export interface <%= Name %> {
  _id: mongoose.Types.ObjectId;
<% for (var [fieldName, field] of Object.entries(fields)) { -%>
<% var useModelType = modelImports.includes(`${field.type}`) || modelImports.includes(`${field.typeArg}`); -%>
<% var nonNullable = field.required || (typeof field.default !== "undefined" && field.nullable === false); -%>
  <%= fieldName %><%- nonNullable ? "" : "?" %>: <%- field.shape ? h.changeCase.pascal(fieldName) : getType(field, { ctx: "interface" }) %><%- (nonNullable || (field.type === "Boolean" && typeof field.default !== "undefined")) ? "" : " | null" %>;
<% } -%>
  createdAt: Date;
  updatedAt: Date;
  archivedAt?: Date | null;
}

export default <%= Name %>;
