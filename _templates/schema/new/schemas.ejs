---
to: graphql/generated/schemas/<%= name %>.schemas.ts
force: true
---
/* Do not edit this file. It was generated programmatically. */
<% var filteredFields = Object.fromEntries(Object.entries(selectableFields)); -%>

import { object, string, number, date, bool, array, InferType, SchemaOf } from 'yup';
import { <%= Name %>CreationInput, <%= Name %>UpdateInput } from '@/graphql/generated/inputs/<%= name %>.inputs';
<% for (var modelImport of modelImports) { -%>
import { <%= h.changeCase.camel(modelImport) %>CreationInputSchema } from "@web/graphql/generated/schemas/<%= h.changeCase.camel(modelImport) %>.schemas";
<% } -%>

<% for (var [fieldName, field] of Object.entries(filteredFields).filter(([, field]) => field.shape)) { -%>
export const <%- fieldName %>Schema = object({
<% for (var [propertyName, property] of Object.entries(field.shape)) { -%>
  <%- propertyName %>: <%- getYup(property) %>,
<% } -%>
});
<% } -%>

export const <%= name %>CreationInputSchema: SchemaOf<<%= Name %>CreationInput> = object({
<% for (var [fieldName, field] of Object.entries(filteredFields)) { -%>
  <%- fieldName %>: <%- getYup(field) %>,
<% } -%>
  archivedAt: date().nullable().notRequired(),
});

export const <%= name %>UpdateInputSchema: SchemaOf<<%= Name %>UpdateInput> = object({
<% for (var [fieldName, field] of Object.entries(filteredFields)) { -%>
  <%- fieldName %>: <%- getYup(field, "update") %>,
<% } -%>
  archivedAt: date().nullable().notRequired(),
});

export type <%= Name %>CreationInputSchemaType = InferType<typeof <%= name %>CreationInputSchema>;
  export type <%= Name %>UpdateInputSchemaType = InferType<typeof <%= name %>UpdateInputSchema>;
