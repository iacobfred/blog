---
to: graphql/generated/schemas/<%= name %>.schemas.ts
force: true
---
/* Do not edit this file. It was generated programmatically. */
<% var filteredFields = Object.fromEntries(Object.entries(selectableFields)); -%>

import { object, string, number, date, bool, array, InferType, SchemaOf } from 'yup';
import { <%= Name %>CreationInput } from '@/graphql/generated/inputs/<%= name %>.inputs';
<% for (var modelImport of modelImports) { -%>
import { <%= h.changeCase.camel(modelImport) %>CreationInputSchema } from "@/graphql/generated/schemas/<%= h.changeCase.camel(modelImport) %>.schemas";
<% } -%>

<% for (var [fieldName, field] of Object.entries(filteredFields).filter(([, field]) => field.shape)) { -%>
export const <%- fieldName %>Schema = object({
<% for (var [propertyName, property] of Object.entries(field.shape)) { -%>
  <%- propertyName %>: <%- getYup(property) %><%- (property.type === "Map" && property.required) ? "" : property.required ? ".required()" : (typeof property.default !== "undefined") ? "" : ".nullable()" %><%- typeof property.default !== "undefined" ? `.default(() => { return ${typeof property.default === "string" ? property.default : JSON5.stringify(property.default)}; })` : ""%>,
<% } -%>
});
<% } -%>

export const <%= name %>CreationInputSchema: SchemaOf<<%= Name %>CreationInput> = object({
<% for (var [fieldName, field] of Object.entries(filteredFields)) { -%>
  <%- fieldName %>: <%- field.shape ? `${fieldName}Schema` : getYup(field) %><%- (field.type === "Map" && field.required) ? "" : field.required ? ".required()" : (typeof field.default !== "undefined") ? "" : ".nullable()" %><%- typeof field.default !== "undefined" ? `.default(() => { return ${typeof field.default === "string" ? field.default : JSON5.stringify(field.default)}; })` : ""%>,
<% } -%>
  archivedAt: date().nullable(),
});

export type <%= Name %>CreationInputSchemaType = InferType<typeof <%= name %>CreationInputSchema>;
