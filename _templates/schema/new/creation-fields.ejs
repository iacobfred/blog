---
to: components/data/<%= h.inflection.pluralize(name) %>/generated/<%= Name %>CreationFields.ts
force: true
---

import CreationFields, { CreationFieldsProps } from "@/components/data/CreationFields";
import { <%= Name %>CreationInput } from "@/graphql/generated/inputs/<%= name %>.inputs";
import { <%= Name %> } from "@/graphql/generated/models/<%= name %>.model";
import { <%= Name %>Fragment } from "@/graphql/generated/fragments/<%= name %>.fragment";

interface <%= Name %>CreationFieldsProps {
  dataTuple: [<%= Name %>CreationInput, Dispatch<Payload<<%= Name %>CreationInput>>];
}

export default function <%= Name %>CreationFields(props: <%= Name %>CreationFieldsProps) {
  return CreationFields<<%= Name %>, <%= Name %>CreationInput, { create<%= Name %>: <%= Name %>Fragment }>({
    dataTuple: props.dataTuple,
    fields: [
<% for (const [fieldName, field] of Object.entries(selectableFields)) { %>
      {
        name: "<%= field.name %>",
        label: "<%= field.name %>",
        type: "<%= field.type %>",
        required: <%= field.required ? "true" : "false" %>,
      },
<% } -%>
    ],
    ...props,
  });
}
