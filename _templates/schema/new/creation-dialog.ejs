---
to: components/data/<%= h.inflection.pluralize(name) %>/generated/<%= Name %>CreationDialog.tsx
force: true
---

import CreationDialog from "@/components/data/CreationDialog";
import { useCreate<%= Name %>, use<%= Name %>DataReducer } from "@/graphql/generated/hooks/<%= name %>.hooks";
import { getOptimisticResponseFor<%= Name %>Creation } from "@/graphql/generated/mutations/<%= name %>.mutations";
import { bindPopover } from "material-ui-popup-state/hooks";
import { <%= Name %>CreationInput } from "@/graphql/generated/inputs/<%= name %>.inputs";
import <%= Name %> from "@/graphql/generated/types/<%= Name %>";
import { <%= Name %>Fragment } from "@/graphql/generated/fragments/<%= name %>.fragment";
import fields from "@/graphql/generated/fields/<%= name %>.fields";

export type <%= Name %>CreationDialogProps = ReturnType<typeof bindPopover>;

export default function <%= Name %>CreationDialog(props: <%= Name %>CreationDialogProps) {
  const [create,] = useCreate<%= Name %>();
  const dataTuple = use<%= Name %>DataReducer();
  return CreationDialog<<%= Name %>, <%= Name %>CreationInput, { create<%= Name %>: <%= Name %>Fragment }>({
    typeName: "<%= name %>",
    dataTuple,
    create,
    fields,
    // produceInitialData,
    getOptimisticResponse: getOptimisticResponseFor<%= Name %>Creation,
    ...props,
  });
}
