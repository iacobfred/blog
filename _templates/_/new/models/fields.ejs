---
to: apps/web/generated/graphql/fields/<%= name %>.fields.ts
force: true
---
/* Do not edit this file. It was generated programmatically. */

import { Field } from "@common/definition";
import { <%= Name %>Fragment } from "@web/generated/graphql/fragments/<%= name %>.fragment";

type FieldKey = Exclude<Extract<keyof <%= Name %>Fragment, string>, "id" | "_id" | "createdAt" | "updatedAt" | "__typename">;

const fields: Record<FieldKey, Field> = {
<% for (var [fieldName, field] of Object.entries(selectableFields)) { -%>
  <%= fieldName %>: {
    label: "<%= field.label ?? fieldName %>",
    type: "<%= field.type %>",
<% if (field.ref) { -%>
    ref: "<%= field.ref %>",
<% } -%>
<% if (field.type === "Array") { -%>
    typeArg: "<%= field.typeArg %>",
<% } -%>
    required: <%= field.required ? "true" : "false" %>,
    widget: <%- field.widget ? JSON5.stringify(field.widget) : "{}" %>,
  },
<% } -%>
  archivedAt: {
    label: "Archived at",
    type: "DateTime",
    required: false,
  },
}

export default fields;
