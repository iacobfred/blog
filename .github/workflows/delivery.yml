# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: delivery
on:
  push:
    branches: [main]
    paths-ignore:
      - .gitignore
      - .github/**
      - "!.github/delivery.yml"
      - .idea/**
      - .vscode/**
      - "**.md"
      - "**.rst"
      - "**.txt"
      - tests.py
      - setup.sh

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SHA: ${{ github.sha }}
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  push-image:
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Check out main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Write dotenv file
        uses: iamsauravsharma/create-dotenv@v1.2.1
        # with:
        #   env-prefix: ''  # Optional (default: '')
        #   file-name: '.env'  # Optional (default : '.env')
        #   directory: '.'  # Optional (default: '.')
        # env: # env available for only this steps
        #   IS_SERVER: true
        #   ENV_KEY_USERNAME: admin
        #   ENV_KEY_API_KEY: USER_API_KEY
      - name: Fix generated dotenv file
        run: |
          sed -i -r 's/(^[^=-]+)\-/\1_/g' .env
          sed -i -r 's/(^[A-Z_]+?=)([^\n\"]+?[\ ][^\n\"]+)/\1"\2"/g' .env
          sed -i -r "s/(^[A-Z_]+?=)([\{][\"\ ]+?[^.]+[\}])/\1'\2'/g" .env
      - name: Build image without cache
        uses: docker/build-push-action@v3
        with:
          build-args: |
            NODE_ENV=production
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          load: false
          push: true
          no-cache: true
          secret-files: ENV_FILE=./.env
          tags: ghcr.io/iacobfred/selfbuilder:${{ github.sha }},ghcr.io/iacobfred/selfbuilder:latest
  deploy:
    needs: [push-image]
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Check out main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Write dotenv file
        uses: iamsauravsharma/create-dotenv@v1.2.1
        # with:
        #   env-prefix: ''  # Optional (default: '')
        #   file-name: '.env'  # Optional (default : '.env')
        #   directory: '.'  # Optional (default: '.')
        # env: # env available for only this steps
        #   IS_SERVER: true
        #   ENV_KEY_USERNAME: admin
        #   ENV_KEY_API_KEY: USER_API_KEY
      - name: Fix generated dotenv file
        run: |
          sed -i -r 's/(^[^=-]+)\-/\1_/g' .env
          sed -i -r 's/(^[A-Z_]+?=)([^\n\"]+?[\ ][^\n\"]+)/\1"\2"/g' .env
          sed -i -r "s/(^[A-Z_]+?=)([\{][\"\ ]+?[^.]+[\}])/\1'\2'/g" .env
      - name: Prepare files to deploy
        run: |
          files_to_transport=(".env" "./docker-compose.yml")
          mkdir -p dist/
          for filepath in "${files_to_transport[@]}"; do
            cp "$filepath" "dist/$filepath"
          done
      # - name: Deploy to Staging server
      #   # https://github.com/marketplace/actions/ssh-deploy
      #   uses: easingthemes/ssh-deploy@main
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     # ARGS: "-rltgoDzvO"
      #     SOURCE: "dist/"
      #     REMOTE_HOST: ${{ secrets.SERVER_HOST }}
      #     REMOTE_USER: ${{ secrets.SERVER_USER }}
      #     TARGET: ${{ secrets.SERVER_TARGET }}
      #     # EXCLUDE: "/dist/, /node_modules/"
      - name: Deploy to server
        id: deploy-image
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          SERVER_HOST: ${{ secrets.DOMAIN }}
          SERVER_TARGET: /var/www/${{ secrets.DOMAIN }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        shell: bash
        run: |
          echo "Adding GitHub to known hosts..."
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "Adding SSH private key..."
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
          echo "Added SSH private key."
          shopt -s nullglob dotglob
          export files_to_transport=(dist/*)
          echo "${files_to_transport[@]}"
          echo "Transferring files to server ..."
          scp -o StrictHostKeyChecking=no -P ${SSH_PORT:=22} -r "${files_to_transport[@]}" jacob@${SERVER_HOST}:${SERVER_TARGET}
          echo "Starting SSH session with ${SERVER_HOST}:${SERVER_TARGET} ..."
          ssh -o StrictHostKeyChecking=no -p $SSH_PORT jacob@$SERVER_HOST << 'ENDSSH'
            cd /var/www/orega.org
            set -a && source .env && echo "Finished setting environment variables."
            set +a
            docker compose up -d
          ENDSSH
