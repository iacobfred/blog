# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: integration
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    paths-ignore:
      - .gitignore
      - .github/**
      - "!.github/integration.yml"
      - .idea/**
      - .vscode/**
      - "**.md"
      - "**.rst"
      - .config/hooks/**
  # schedule:
  #   - cron: 0 9 * * *
  workflow_dispatch:
    inputs:
      jobs:
        description: Comma-separated list of names of jobs to trigger
        required: false
        default: build

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SHA: ${{ github.sha }}

jobs:
  changed-files:
    name: Get changed files
    runs-on: ubuntu-latest
    outputs:
      added-files: ${{ steps.changed-files.outputs.added_files }}
      deleted-files: ${{ steps.changed-files.outputs.deleted_files }}
      modified-files: ${{ steps.changed-files.outputs.modified_files }}
      all-changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v29.0.3
  build:
    name: Build image
    needs: changed-files
    runs-on: ubuntu-latest
    environment: test
    if: github.actor != 'depbot'
    steps:
      - name: Check out main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Specify Docker Compose version
        run: |
          echo ""
          echo "Installed version: $(docker compose version)"
          version=2.2.1
          docker compose version | grep --quiet "$version" || {
            echo "Installing Docker Compose version $version ..."
            mkdir -p ~/.docker/cli-plugins/
            curl -SL "https://github.com/docker/compose/releases/download/v${version}/docker-compose-linux-x86_64" -o ~/.docker/cli-plugins/docker-compose
            chmod +x ~/.docker/cli-plugins/docker-compose
            echo "Installed version: $(docker compose version)"
          }
      - name: Configure Docker Compose
        shell: bash
        run: |
          echo "Configuring Docker Compose..."
          if [[ -f docker-compose.test.yml ]]; then
            echo "Using docker-compose.test.yml for default overrides..."
            cp docker-compose.test.yml docker-compose.override.yml
          fi
          echo "Done."
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Generate .env file
        uses: iacobfred/generate-dotenv@v0.2.3
        with:
          template-paths: |
            .config/_.env
            apps/web/.env.production
        env: # env available for only this steps
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
          NEXT_PUBLIC_DOMAIN: ${{ secrets.NEXT_PUBLIC_DOMAIN }}
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
          NEXTJS_PORT: ${{ secrets.NEXTJS_PORT }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image without cache
        uses: docker/build-push-action@v3
        with:
          build-args: |
            NODE_ENV=production
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./apps/web/Dockerfile
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secret-files: ENV_FILE=./.env
          tags: ghcr.io/iacobfred/selfbuilder:${{ github.sha }}
